buildscript {
	ext {
		springBootVersion = '1.3.8.BUILD-SNAPSHOT'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("mysql:mysql-connector-java:5.1.39")
	}
}

apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'application'

jar {
	baseName = 'darwin'
	version = '0.0.1-SNAPSHOT'
}
war {
	baseName = 'darwin'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

configurations {
    provided
}

sourceSets {
    main { compileClasspath += configurations.provided }
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.modelmapper:modelmapper:0.7.5')
	compile('commons-collections:commons-collections')
	compile('com.vividsolutions:jts:1.13')
	provided('org.projectlombok:lombok:1.16.6')
	
	compile('mysql:mysql-connector-java')
	
	compile('com.google.code.geocoder-java:geocoder-java:0.16')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.assertj:assertj-core')
}

mainClassName = 'com.hhfactory.Application'
eclipse {
	classpath {
		 plusConfigurations += [configurations.provided]
		 noExportConfigurations += [configurations.provided]
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}
